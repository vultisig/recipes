// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: recipe_specification.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Recipe represents a complete transaction policy specification for plugins
// This is the canonical definition of what a recipe contains and supports
type Recipe struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the recipe
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name for the recipe
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Detailed description of what the recipe allows
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Semantic version of the recipe (e.g., "1.0.0")
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Author/organization identifier
	Author string `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	// Ordered list of permission rules that define allowed/denied actions
	Rules []*Rule `protobuf:"bytes,6,rep,name=rules,proto3" json:"rules,omitempty"`
	// Creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Optional metadata for enhanced recipe management
	Metadata      *RecipeMetadata `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_recipe_specification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_specification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_recipe_specification_proto_rawDescGZIP(), []int{0}
}

func (x *Recipe) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Recipe) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipe) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Recipe) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Recipe) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Recipe) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Recipe) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Recipe) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Recipe) GetMetadata() *RecipeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// RecipeMetadata provides additional metadata for recipe management
type RecipeMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// License under which the recipe is distributed
	License string `protobuf:"bytes,1,opt,name=license,proto3" json:"license,omitempty"`
	// Tags for categorization and discovery
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// Documentation URL
	DocumentationUrl string `protobuf:"bytes,3,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	// Minimum Vultisig version required
	MinVultisigVersion string `protobuf:"bytes,4,opt,name=min_vultisig_version,json=minVultisigVersion,proto3" json:"min_vultisig_version,omitempty"`
	// Supported blockchain networks
	SupportedChains []string `protobuf:"bytes,5,rep,name=supported_chains,json=supportedChains,proto3" json:"supported_chains,omitempty"`
	// Supported protocols
	SupportedProtocols []string `protobuf:"bytes,6,rep,name=supported_protocols,json=supportedProtocols,proto3" json:"supported_protocols,omitempty"`
	// Recipe category (e.g., "payroll", "trading", "defi")
	Category string `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	// Whether this recipe is deprecated
	Deprecated bool `protobuf:"varint,8,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	// Deprecation reason and migration info
	DeprecationMessage string `protobuf:"bytes,9,opt,name=deprecation_message,json=deprecationMessage,proto3" json:"deprecation_message,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RecipeMetadata) Reset() {
	*x = RecipeMetadata{}
	mi := &file_recipe_specification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeMetadata) ProtoMessage() {}

func (x *RecipeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_specification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeMetadata.ProtoReflect.Descriptor instead.
func (*RecipeMetadata) Descriptor() ([]byte, []int) {
	return file_recipe_specification_proto_rawDescGZIP(), []int{1}
}

func (x *RecipeMetadata) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *RecipeMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RecipeMetadata) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *RecipeMetadata) GetMinVultisigVersion() string {
	if x != nil {
		return x.MinVultisigVersion
	}
	return ""
}

func (x *RecipeMetadata) GetSupportedChains() []string {
	if x != nil {
		return x.SupportedChains
	}
	return nil
}

func (x *RecipeMetadata) GetSupportedProtocols() []string {
	if x != nil {
		return x.SupportedProtocols
	}
	return nil
}

func (x *RecipeMetadata) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *RecipeMetadata) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *RecipeMetadata) GetDeprecationMessage() string {
	if x != nil {
		return x.DeprecationMessage
	}
	return ""
}

var File_recipe_specification_proto protoreflect.FileDescriptor

const file_recipe_specification_proto_rawDesc = "" +
	"\n" +
	"\x1arecipe_specification.proto\x12\x05types\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\n" +
	"rule.proto\"\xcc\x02\n" +
	"\x06Recipe\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x16\n" +
	"\x06author\x18\x05 \x01(\tR\x06author\x12!\n" +
	"\x05rules\x18\x06 \x03(\v2\v.types.RuleR\x05rules\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x121\n" +
	"\bmetadata\x18\t \x01(\v2\x15.types.RecipeMetadataR\bmetadata\"\xe6\x02\n" +
	"\x0eRecipeMetadata\x12\x18\n" +
	"\alicense\x18\x01 \x01(\tR\alicense\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x12+\n" +
	"\x11documentation_url\x18\x03 \x01(\tR\x10documentationUrl\x120\n" +
	"\x14min_vultisig_version\x18\x04 \x01(\tR\x12minVultisigVersion\x12)\n" +
	"\x10supported_chains\x18\x05 \x03(\tR\x0fsupportedChains\x12/\n" +
	"\x13supported_protocols\x18\x06 \x03(\tR\x12supportedProtocols\x12\x1a\n" +
	"\bcategory\x18\a \x01(\tR\bcategory\x12\x1e\n" +
	"\n" +
	"deprecated\x18\b \x01(\bR\n" +
	"deprecated\x12/\n" +
	"\x13deprecation_message\x18\t \x01(\tR\x12deprecationMessageB#Z!github.com/vultisig/recipes/typesb\x06proto3"

var (
	file_recipe_specification_proto_rawDescOnce sync.Once
	file_recipe_specification_proto_rawDescData []byte
)

func file_recipe_specification_proto_rawDescGZIP() []byte {
	file_recipe_specification_proto_rawDescOnce.Do(func() {
		file_recipe_specification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_recipe_specification_proto_rawDesc), len(file_recipe_specification_proto_rawDesc)))
	})
	return file_recipe_specification_proto_rawDescData
}

var file_recipe_specification_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_recipe_specification_proto_goTypes = []any{
	(*Recipe)(nil),                // 0: types.Recipe
	(*RecipeMetadata)(nil),        // 1: types.RecipeMetadata
	(*Rule)(nil),                  // 2: types.Rule
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_recipe_specification_proto_depIdxs = []int32{
	2, // 0: types.Recipe.rules:type_name -> types.Rule
	3, // 1: types.Recipe.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: types.Recipe.updated_at:type_name -> google.protobuf.Timestamp
	1, // 3: types.Recipe.metadata:type_name -> types.RecipeMetadata
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_recipe_specification_proto_init() }
func file_recipe_specification_proto_init() {
	if File_recipe_specification_proto != nil {
		return
	}
	file_rule_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_recipe_specification_proto_rawDesc), len(file_recipe_specification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_recipe_specification_proto_goTypes,
		DependencyIndexes: file_recipe_specification_proto_depIdxs,
		MessageInfos:      file_recipe_specification_proto_msgTypes,
	}.Build()
	File_recipe_specification_proto = out.File
	file_recipe_specification_proto_goTypes = nil
	file_recipe_specification_proto_depIdxs = nil
}
