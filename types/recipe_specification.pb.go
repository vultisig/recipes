// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: recipe_specification.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RecipeSchema defines what types of recipes/policies a plugin can handle
// This is used for UI filtering and policy validation
type RecipeSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Schema version for future compatibility
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Scheduling specification version this plugin supports
	ScheduleVersion int32 `protobuf:"varint,2,opt,name=schedule_version,json=scheduleVersion,proto3" json:"schedule_version,omitempty"`
	// Plugin identification
	PluginId      string `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	PluginName    string `protobuf:"bytes,4,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
	PluginVersion int32  `protobuf:"varint,5,opt,name=plugin_version,json=pluginVersion,proto3" json:"plugin_version,omitempty"`
	// What resources this plugin can handle with their parameter constraints
	SupportedResources []*ResourcePattern `protobuf:"bytes,6,rep,name=supported_resources,json=supportedResources,proto3" json:"supported_resources,omitempty"`
	// What scheduling capabilities this plugin supports
	Scheduling *SchedulingCapability `protobuf:"bytes,7,opt,name=scheduling,proto3" json:"scheduling,omitempty"`
	// Plugin requirements
	Requirements  *PluginRequirements `protobuf:"bytes,8,opt,name=requirements,proto3" json:"requirements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipeSchema) Reset() {
	*x = RecipeSchema{}
	mi := &file_recipe_specification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeSchema) ProtoMessage() {}

func (x *RecipeSchema) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_specification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeSchema.ProtoReflect.Descriptor instead.
func (*RecipeSchema) Descriptor() ([]byte, []int) {
	return file_recipe_specification_proto_rawDescGZIP(), []int{0}
}

func (x *RecipeSchema) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RecipeSchema) GetScheduleVersion() int32 {
	if x != nil {
		return x.ScheduleVersion
	}
	return 0
}

func (x *RecipeSchema) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *RecipeSchema) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *RecipeSchema) GetPluginVersion() int32 {
	if x != nil {
		return x.PluginVersion
	}
	return 0
}

func (x *RecipeSchema) GetSupportedResources() []*ResourcePattern {
	if x != nil {
		return x.SupportedResources
	}
	return nil
}

func (x *RecipeSchema) GetScheduling() *SchedulingCapability {
	if x != nil {
		return x.Scheduling
	}
	return nil
}

func (x *RecipeSchema) GetRequirements() *PluginRequirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

// ResourcePattern defines a specific resource and what constraints its parameters support
type ResourcePattern struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specific resource (e.g., ethereum.eth.transfer)
	ResourcePath *ResourcePath `protobuf:"bytes,1,opt,name=resource_path,json=resourcePath,proto3" json:"resource_path,omitempty"`
	// What constraint types each parameter of this resource supports
	ParameterCapabilities []*ParameterConstraintCapability `protobuf:"bytes,2,rep,name=parameter_capabilities,json=parameterCapabilities,proto3" json:"parameter_capabilities,omitempty"`
	// Whether this resource is required by the plugin
	Required      bool `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcePattern) Reset() {
	*x = ResourcePattern{}
	mi := &file_recipe_specification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcePattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePattern) ProtoMessage() {}

func (x *ResourcePattern) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_specification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePattern.ProtoReflect.Descriptor instead.
func (*ResourcePattern) Descriptor() ([]byte, []int) {
	return file_recipe_specification_proto_rawDescGZIP(), []int{1}
}

func (x *ResourcePattern) GetResourcePath() *ResourcePath {
	if x != nil {
		return x.ResourcePath
	}
	return nil
}

func (x *ResourcePattern) GetParameterCapabilities() []*ParameterConstraintCapability {
	if x != nil {
		return x.ParameterCapabilities
	}
	return nil
}

func (x *ResourcePattern) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

// ParameterConstraintCapability defines what constraint types a parameter supports
type ParameterConstraintCapability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Parameter name (e.g., "recipient", "amount")
	ParameterName string `protobuf:"bytes,1,opt,name=parameter_name,json=parameterName,proto3" json:"parameter_name,omitempty"`
	// Supported constraint types for this parameter
	SupportedTypes []ConstraintType `protobuf:"varint,2,rep,packed,name=supported_types,json=supportedTypes,proto3,enum=types.ConstraintType" json:"supported_types,omitempty"`
	// Whether this parameter must be constrained
	Required      bool `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParameterConstraintCapability) Reset() {
	*x = ParameterConstraintCapability{}
	mi := &file_recipe_specification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParameterConstraintCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterConstraintCapability) ProtoMessage() {}

func (x *ParameterConstraintCapability) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_specification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParameterConstraintCapability.ProtoReflect.Descriptor instead.
func (*ParameterConstraintCapability) Descriptor() ([]byte, []int) {
	return file_recipe_specification_proto_rawDescGZIP(), []int{2}
}

func (x *ParameterConstraintCapability) GetParameterName() string {
	if x != nil {
		return x.ParameterName
	}
	return ""
}

func (x *ParameterConstraintCapability) GetSupportedTypes() []ConstraintType {
	if x != nil {
		return x.SupportedTypes
	}
	return nil
}

func (x *ParameterConstraintCapability) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

// PluginRequirements defines what the plugin needs to function
type PluginRequirements struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum Vultisig version required
	MinVultisigVersion int32 `protobuf:"varint,1,opt,name=min_vultisig_version,json=minVultisigVersion,proto3" json:"min_vultisig_version,omitempty"`
	// Supported blockchain networks
	SupportedChains []string `protobuf:"bytes,2,rep,name=supported_chains,json=supportedChains,proto3" json:"supported_chains,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PluginRequirements) Reset() {
	*x = PluginRequirements{}
	mi := &file_recipe_specification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRequirements) ProtoMessage() {}

func (x *PluginRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_specification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRequirements.ProtoReflect.Descriptor instead.
func (*PluginRequirements) Descriptor() ([]byte, []int) {
	return file_recipe_specification_proto_rawDescGZIP(), []int{3}
}

func (x *PluginRequirements) GetMinVultisigVersion() int32 {
	if x != nil {
		return x.MinVultisigVersion
	}
	return 0
}

func (x *PluginRequirements) GetSupportedChains() []string {
	if x != nil {
		return x.SupportedChains
	}
	return nil
}

var File_recipe_specification_proto protoreflect.FileDescriptor

const file_recipe_specification_proto_rawDesc = "" +
	"\n" +
	"\x1arecipe_specification.proto\x12\x05types\x1a\x10constraint.proto\x1a\x0eresource.proto\x1a\x10scheduling.proto\"\xfd\x02\n" +
	"\fRecipeSchema\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x05R\aversion\x12)\n" +
	"\x10schedule_version\x18\x02 \x01(\x05R\x0fscheduleVersion\x12\x1b\n" +
	"\tplugin_id\x18\x03 \x01(\tR\bpluginId\x12\x1f\n" +
	"\vplugin_name\x18\x04 \x01(\tR\n" +
	"pluginName\x12%\n" +
	"\x0eplugin_version\x18\x05 \x01(\x05R\rpluginVersion\x12G\n" +
	"\x13supported_resources\x18\x06 \x03(\v2\x16.types.ResourcePatternR\x12supportedResources\x12;\n" +
	"\n" +
	"scheduling\x18\a \x01(\v2\x1b.types.SchedulingCapabilityR\n" +
	"scheduling\x12=\n" +
	"\frequirements\x18\b \x01(\v2\x19.types.PluginRequirementsR\frequirements\"\xc4\x01\n" +
	"\x0fResourcePattern\x128\n" +
	"\rresource_path\x18\x01 \x01(\v2\x13.types.ResourcePathR\fresourcePath\x12[\n" +
	"\x16parameter_capabilities\x18\x02 \x03(\v2$.types.ParameterConstraintCapabilityR\x15parameterCapabilities\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\"\xa2\x01\n" +
	"\x1dParameterConstraintCapability\x12%\n" +
	"\x0eparameter_name\x18\x01 \x01(\tR\rparameterName\x12>\n" +
	"\x0fsupported_types\x18\x02 \x03(\x0e2\x15.types.ConstraintTypeR\x0esupportedTypes\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\"q\n" +
	"\x12PluginRequirements\x120\n" +
	"\x14min_vultisig_version\x18\x01 \x01(\x05R\x12minVultisigVersion\x12)\n" +
	"\x10supported_chains\x18\x02 \x03(\tR\x0fsupportedChainsB#Z!github.com/vultisig/recipes/typesb\x06proto3"

var (
	file_recipe_specification_proto_rawDescOnce sync.Once
	file_recipe_specification_proto_rawDescData []byte
)

func file_recipe_specification_proto_rawDescGZIP() []byte {
	file_recipe_specification_proto_rawDescOnce.Do(func() {
		file_recipe_specification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_recipe_specification_proto_rawDesc), len(file_recipe_specification_proto_rawDesc)))
	})
	return file_recipe_specification_proto_rawDescData
}

var file_recipe_specification_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_recipe_specification_proto_goTypes = []any{
	(*RecipeSchema)(nil),                  // 0: types.RecipeSchema
	(*ResourcePattern)(nil),               // 1: types.ResourcePattern
	(*ParameterConstraintCapability)(nil), // 2: types.ParameterConstraintCapability
	(*PluginRequirements)(nil),            // 3: types.PluginRequirements
	(*SchedulingCapability)(nil),          // 4: types.SchedulingCapability
	(*ResourcePath)(nil),                  // 5: types.ResourcePath
	(ConstraintType)(0),                   // 6: types.ConstraintType
}
var file_recipe_specification_proto_depIdxs = []int32{
	1, // 0: types.RecipeSchema.supported_resources:type_name -> types.ResourcePattern
	4, // 1: types.RecipeSchema.scheduling:type_name -> types.SchedulingCapability
	3, // 2: types.RecipeSchema.requirements:type_name -> types.PluginRequirements
	5, // 3: types.ResourcePattern.resource_path:type_name -> types.ResourcePath
	2, // 4: types.ResourcePattern.parameter_capabilities:type_name -> types.ParameterConstraintCapability
	6, // 5: types.ParameterConstraintCapability.supported_types:type_name -> types.ConstraintType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_recipe_specification_proto_init() }
func file_recipe_specification_proto_init() {
	if File_recipe_specification_proto != nil {
		return
	}
	file_constraint_proto_init()
	file_resource_proto_init()
	file_scheduling_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_recipe_specification_proto_rawDesc), len(file_recipe_specification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_recipe_specification_proto_goTypes,
		DependencyIndexes: file_recipe_specification_proto_depIdxs,
		MessageInfos:      file_recipe_specification_proto_msgTypes,
	}.Build()
	File_recipe_specification_proto = out.File
	file_recipe_specification_proto_goTypes = nil
	file_recipe_specification_proto_depIdxs = nil
}
