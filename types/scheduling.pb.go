// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: scheduling.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ScheduleFrequency defines supported scheduling frequencies
type ScheduleFrequency int32

const (
	ScheduleFrequency_SCHEDULE_FREQUENCY_UNSPECIFIED ScheduleFrequency = 0
	// High frequency (DCA style)
	ScheduleFrequency_SCHEDULE_FREQUENCY_HOURLY ScheduleFrequency = 1
	ScheduleFrequency_SCHEDULE_FREQUENCY_DAILY  ScheduleFrequency = 2
	// Medium frequency (regular payments)
	ScheduleFrequency_SCHEDULE_FREQUENCY_WEEKLY   ScheduleFrequency = 3
	ScheduleFrequency_SCHEDULE_FREQUENCY_BIWEEKLY ScheduleFrequency = 4
	ScheduleFrequency_SCHEDULE_FREQUENCY_MONTHLY  ScheduleFrequency = 5
)

// Enum value maps for ScheduleFrequency.
var (
	ScheduleFrequency_name = map[int32]string{
		0: "SCHEDULE_FREQUENCY_UNSPECIFIED",
		1: "SCHEDULE_FREQUENCY_HOURLY",
		2: "SCHEDULE_FREQUENCY_DAILY",
		3: "SCHEDULE_FREQUENCY_WEEKLY",
		4: "SCHEDULE_FREQUENCY_BIWEEKLY",
		5: "SCHEDULE_FREQUENCY_MONTHLY",
	}
	ScheduleFrequency_value = map[string]int32{
		"SCHEDULE_FREQUENCY_UNSPECIFIED": 0,
		"SCHEDULE_FREQUENCY_HOURLY":      1,
		"SCHEDULE_FREQUENCY_DAILY":       2,
		"SCHEDULE_FREQUENCY_WEEKLY":      3,
		"SCHEDULE_FREQUENCY_BIWEEKLY":    4,
		"SCHEDULE_FREQUENCY_MONTHLY":     5,
	}
)

func (x ScheduleFrequency) Enum() *ScheduleFrequency {
	p := new(ScheduleFrequency)
	*p = x
	return p
}

func (x ScheduleFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduling_proto_enumTypes[0].Descriptor()
}

func (ScheduleFrequency) Type() protoreflect.EnumType {
	return &file_scheduling_proto_enumTypes[0]
}

func (x ScheduleFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleFrequency.Descriptor instead.
func (ScheduleFrequency) EnumDescriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{0}
}

// SchedulingCapability defines what scheduling patterns a plugin supports
type SchedulingCapability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether this plugin supports scheduling at all
	SupportsScheduling bool `protobuf:"varint,1,opt,name=supports_scheduling,json=supportsScheduling,proto3" json:"supports_scheduling,omitempty"`
	// Supported schedule frequencies
	SupportedFrequencies []ScheduleFrequency `protobuf:"varint,2,rep,packed,name=supported_frequencies,json=supportedFrequencies,proto3,enum=types.ScheduleFrequency" json:"supported_frequencies,omitempty"`
	// Maximum number of scheduled executions allowed
	MaxScheduledExecutions int32 `protobuf:"varint,3,opt,name=max_scheduled_executions,json=maxScheduledExecutions,proto3" json:"max_scheduled_executions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SchedulingCapability) Reset() {
	*x = SchedulingCapability{}
	mi := &file_scheduling_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchedulingCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingCapability) ProtoMessage() {}

func (x *SchedulingCapability) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingCapability.ProtoReflect.Descriptor instead.
func (*SchedulingCapability) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{0}
}

func (x *SchedulingCapability) GetSupportsScheduling() bool {
	if x != nil {
		return x.SupportsScheduling
	}
	return false
}

func (x *SchedulingCapability) GetSupportedFrequencies() []ScheduleFrequency {
	if x != nil {
		return x.SupportedFrequencies
	}
	return nil
}

func (x *SchedulingCapability) GetMaxScheduledExecutions() int32 {
	if x != nil {
		return x.MaxScheduledExecutions
	}
	return 0
}

var File_scheduling_proto protoreflect.FileDescriptor

const file_scheduling_proto_rawDesc = "" +
	"\n" +
	"\x10scheduling.proto\x12\x05types\"\xd0\x01\n" +
	"\x14SchedulingCapability\x12/\n" +
	"\x13supports_scheduling\x18\x01 \x01(\bR\x12supportsScheduling\x12M\n" +
	"\x15supported_frequencies\x18\x02 \x03(\x0e2\x18.types.ScheduleFrequencyR\x14supportedFrequencies\x128\n" +
	"\x18max_scheduled_executions\x18\x03 \x01(\x05R\x16maxScheduledExecutions*\xd4\x01\n" +
	"\x11ScheduleFrequency\x12\"\n" +
	"\x1eSCHEDULE_FREQUENCY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SCHEDULE_FREQUENCY_HOURLY\x10\x01\x12\x1c\n" +
	"\x18SCHEDULE_FREQUENCY_DAILY\x10\x02\x12\x1d\n" +
	"\x19SCHEDULE_FREQUENCY_WEEKLY\x10\x03\x12\x1f\n" +
	"\x1bSCHEDULE_FREQUENCY_BIWEEKLY\x10\x04\x12\x1e\n" +
	"\x1aSCHEDULE_FREQUENCY_MONTHLY\x10\x05B#Z!github.com/vultisig/recipes/typesb\x06proto3"

var (
	file_scheduling_proto_rawDescOnce sync.Once
	file_scheduling_proto_rawDescData []byte
)

func file_scheduling_proto_rawDescGZIP() []byte {
	file_scheduling_proto_rawDescOnce.Do(func() {
		file_scheduling_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scheduling_proto_rawDesc), len(file_scheduling_proto_rawDesc)))
	})
	return file_scheduling_proto_rawDescData
}

var file_scheduling_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scheduling_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_scheduling_proto_goTypes = []any{
	(ScheduleFrequency)(0),       // 0: types.ScheduleFrequency
	(*SchedulingCapability)(nil), // 1: types.SchedulingCapability
}
var file_scheduling_proto_depIdxs = []int32{
	0, // 0: types.SchedulingCapability.supported_frequencies:type_name -> types.ScheduleFrequency
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_scheduling_proto_init() }
func file_scheduling_proto_init() {
	if File_scheduling_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scheduling_proto_rawDesc), len(file_scheduling_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scheduling_proto_goTypes,
		DependencyIndexes: file_scheduling_proto_depIdxs,
		EnumInfos:         file_scheduling_proto_enumTypes,
		MessageInfos:      file_scheduling_proto_msgTypes,
	}.Build()
	File_scheduling_proto = out.File
	file_scheduling_proto_goTypes = nil
	file_scheduling_proto_depIdxs = nil
}
