// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: thorchain.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Coin represents a token with denomination and amount
type Coin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Denom         string                 `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_thorchain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_thorchain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_thorchain_proto_rawDescGZIP(), []int{0}
}

func (x *Coin) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *Coin) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// MsgDeposit represents THORChain's MsgDeposit message for swaps/deposits
type MsgDeposit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Coins being deposited
	Coins []*Coin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
	// Memo contains swap instructions including destination address
	Memo string `protobuf:"bytes,2,opt,name=memo,proto3" json:"memo,omitempty"`
	// Signer is the address of the depositor
	Signer        string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgDeposit) Reset() {
	*x = MsgDeposit{}
	mi := &file_thorchain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeposit) ProtoMessage() {}

func (x *MsgDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_thorchain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeposit.ProtoReflect.Descriptor instead.
func (*MsgDeposit) Descriptor() ([]byte, []int) {
	return file_thorchain_proto_rawDescGZIP(), []int{1}
}

func (x *MsgDeposit) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *MsgDeposit) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *MsgDeposit) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

var File_thorchain_proto protoreflect.FileDescriptor

const file_thorchain_proto_rawDesc = "" +
	"\n" +
	"\x0fthorchain.proto\x12\fthorchain.v1\"4\n" +
	"\x04Coin\x12\x14\n" +
	"\x05denom\x18\x01 \x01(\tR\x05denom\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\tR\x06amount\"b\n" +
	"\n" +
	"MsgDeposit\x12(\n" +
	"\x05coins\x18\x01 \x03(\v2\x12.thorchain.v1.CoinR\x05coins\x12\x12\n" +
	"\x04memo\x18\x02 \x01(\tR\x04memo\x12\x16\n" +
	"\x06signer\x18\x03 \x01(\tR\x06signerB#Z!github.com/vultisig/recipes/typesb\x06proto3"

var (
	file_thorchain_proto_rawDescOnce sync.Once
	file_thorchain_proto_rawDescData []byte
)

func file_thorchain_proto_rawDescGZIP() []byte {
	file_thorchain_proto_rawDescOnce.Do(func() {
		file_thorchain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_thorchain_proto_rawDesc), len(file_thorchain_proto_rawDesc)))
	})
	return file_thorchain_proto_rawDescData
}

var file_thorchain_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_thorchain_proto_goTypes = []any{
	(*Coin)(nil),       // 0: thorchain.v1.Coin
	(*MsgDeposit)(nil), // 1: thorchain.v1.MsgDeposit
}
var file_thorchain_proto_depIdxs = []int32{
	0, // 0: thorchain.v1.MsgDeposit.coins:type_name -> thorchain.v1.Coin
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_thorchain_proto_init() }
func file_thorchain_proto_init() {
	if File_thorchain_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_thorchain_proto_rawDesc), len(file_thorchain_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_thorchain_proto_goTypes,
		DependencyIndexes: file_thorchain_proto_depIdxs,
		MessageInfos:      file_thorchain_proto_msgTypes,
	}.Build()
	File_thorchain_proto = out.File
	file_thorchain_proto_goTypes = nil
	file_thorchain_proto_depIdxs = nil
}
